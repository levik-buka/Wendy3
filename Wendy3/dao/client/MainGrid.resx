<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Aikajakso.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Asunto.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Lukema.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Kulutus.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Perusmaksut.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Käyttömaksut.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Tasauslasku.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Loppusumma.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKDgAAAEAGAAoHAAAFgAAACgAAAAoAAAAcAAAAAEAGAAAAAAAAAAAAGQAAABkAAAAAAAAAAAA
        AAAhISEdHR0cHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwdHR0eHh4cHBwcHBwfHx8cHBwcHhke
        IBofIRseIBocHhgcHhgcHhgfHx8fHx8fHx8dHR0dHR0fHx8fHx8fHx8fHx8fHx8fHx8dHR0dHR0fHx8f
        Hx8YGBgUFBQUFBQVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUWFhYXFxcWFhYYGBgZGRoaFyAZFiAZFx0Y
        FxsZGBwZGBwZFxsZFxsXFhoWFhYZGRkVFRUWFhYYGBgYGBgYGBgYGBgZGRkbGxsbGxsbGxscHBwfHx8l
        JSUNDQ0KCgoLCwsLCwsLCwsLCwsLCwsKCgoLCwsLCwsLCwsLCws9PT0fHx9JSUlBQEFNTE9KSU1TUlQt
        LC5SUlRUVFZUU1U/P0FHRkgwMDBXV1cMDAwLCwsLCwsLCwsLCwsLCwsKCgoLCwsLCwsLCwsLCwsNDQ0n
        JycNDQ0LCwsLCwsLCwsLCwsMDAwMDAwLCwsLCwsLCwsLCwsLCwtGRkYzMzNSUlIsLCxKSkpDQ0NiYmIz
        MzNGRkZUVFRGRkYzMzNKSkpqampJSUkNDQ0MDAwMDAwMDAwLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsZ
        GRkPDw8ODg4NDQ8ODRAPDRIQDhUODBMMCw8MCw4MCw4MCw4MCg4XFhknJyoTEhUoJyoeGh4sKCslJick
        JiYXFxgdHB8NDBAsLjMbHCEcHSAZGh0PDBAQDRAODRAJDhAJDQ8LDA8LDA8NCwsODAsKCw4JCw4LCgoX
        FxcQEBBvb290cndubHJgXmV7eH94dn1dW2EwLjQqKC4lIykxLzUtKzFEQkguLDIkISdCOkFbU1pVT1Fc
        V1g8ODwvLTNXVl2cnqiytb6ttbqnrrOZpqmVpKehrbGjrLCdpqqXnqOTmp6Klp+Hk56KlaBJTVIMCwkY
        GBgRERFVVVV5eXyFhoqMjI13dXRgXl5APEFJRks6OD4oJiw9O0JWVFs6Nz5CQEdIRk03MDgzLDRGPEBI
        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
        EBAUDxIRDxQRDxMQEQ8QEQ8QEQ8SEhETExETExETExITExESEhESEhASEhESEhAREQ8QEBAREREQEBAV
        FRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>